name: 'Run fast-forward merge'

on:
  workflow_dispatch:
    inputs:
      im_sure:
        description: Merge branch to main
        type: boolean
        required: false
        default: false

env:
  BASE_BRANCH: main
  DEV_BRANCH: dev

# in case of PAT usage write-all token permissions is not required
# otherwise uncomment option below
#permissions: write-all

jobs:
  ff-merge:
    name: 'Run fast-forward merge'
    #runs-on: [self-hosted, infra]
    runs-on: ubuntu-20.04
    container: ubuntu:20.04
    defaults:
      run:
        shell: bash
    env:
      # PAT is required because of the following reasons:
      # - github token cannot bypass repository restrictions and branch protection
      #   rules but it's required to push to main branch
      # - github token doesn't trigger 'on push' workflow actions but PAT does
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: 'Debug'
        run: |
          printenv

      - name: 'Check actor'
        run: |
          if [[ ${GITHUB_ACTOR} =~ ^(bissquit)$ ]]; then
            echo Ok
          else
            { echo "You are not permitted to run, exiting..." ; exit 1 ; }
          fi

      - name: 'Install and Configure applications'
        run: |
          apt-get update
          apt-get install -yqq --no-install-recommends \
            ca-certificates \
            git-core
          rm /bin/sh
          ln -s /bin/bash /bin/sh

      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: 'Add git path to trusted'
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: 'Prepare repository'
        run: |
          git remote set-url origin https://merge-bot:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git fetch
          git checkout ${BASE_BRANCH}
          git pull origin ${BASE_BRANCH}
          git checkout ${GITHUB_REF_NAME}

      - name: 'Run tests'
        run: |
          [[ ${GITHUB_REF_NAME} == ${DEV_BRANCH} ]] && echo "Branch name is ok" || { echo "You are on ${GITHUB_REF_NAME} branch, exiting..." ; exit 1 ; }

          LAST_REF_COMMIT=$(git show-ref --heads -s ${BASE_BRANCH})
          BRANCH_BASE_COMMIT=$(git merge-base ${BASE_BRANCH} ${GITHUB_REF_NAME})
          [[ ${LAST_REF_COMMIT} == ${BRANCH_BASE_COMMIT} ]] && echo "Branch is rebased" || { echo "Branch is not rebased" ; exit 1 ; }

      - name: 'Run fast-forward merge'
        if: inputs.im_sure
        run: |
          set -euxo pipefail

          git checkout ${BASE_BRANCH}
          git merge --ff-only ${GITHUB_REF_NAME}
          git push origin ${BASE_BRANCH}
