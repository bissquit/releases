name: 'Release'

on:
  push:
    branches:
      - main
  workflow_dispatch:

# in case of PAT usage write-all token permissions is not required
# otherwise uncomment option below
permissions: write-all

jobs:
  build-and-release:
    name: 'Build app'
    # runs-on: [self-hosted, ex44]
    runs-on: ubuntu-20.04
    container: explyt/plugin-env:v1.0.0
    defaults:
      run:
        shell: bash
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: 'Debug'
        run: |
          printenv

      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Install prerequisites'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update && apt-get install -yqq --no-install-recommends \
            ca-certificates \
            git-core
          rm /bin/sh && ln -s /bin/bash /bin/sh

      - name: 'Install node'
        run: |
          curl -sL https://deb.nodesource.com/setup_20.x -o /tmp/nodesource_setup.sh
          chmod +x /tmp/nodesource_setup.sh
          bash /tmp/nodesource_setup.sh
          apt-get install -yqq --no-install-recommends nodejs

      - name: 'Add git path to trusted'
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}

      # dry run
      - name: 'Release dry-run'
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23.0.0
          extra_plugins: |
            @semantic-release/commit-analyzer@11.1.0
            @semantic-release/exec@6.0.3
            conventional-changelog-conventionalcommits@7.0.2
          # run with dry_run mode to get the next release version and pass to build app
          dry_run: true

      - name: 'Get the next release version'
        id: release_version
        # see .releaserc.json to get certain file name
        run: |
          set -euxo pipefail
          ls -lha
          cat release_version.txt
          echo "RELEASE_VERSION=$(cat release_version.txt)" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=$(cat release_version.txt)" >> $GITHUB_ENV

      - name: 'Build app'
        run: |
          echo "${RELEASE_VERSION}" > dummy-data.txt

      - name: 'Release'
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23.0.0
          extra_plugins: |
            @semantic-release/commit-analyzer@11.1.0
            @semantic-release/exec@6.0.3
            conventional-changelog-conventionalcommits@7.0.2

    outputs:
      release_version: ${{ steps.release_version.outputs.RELEASE_VERSION }}

  publish-package:
    name: 'Publish package'
    needs: build-and-release
    uses: ./.github/workflows/publish-github-packages.yml
    with:
      version: ${{ needs.build-and-release.outputs.release_version }}
    secrets: inherit
